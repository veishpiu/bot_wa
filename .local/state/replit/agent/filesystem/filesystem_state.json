{"file_contents":{"confess.js":{"content":"module.exports = function (client) {\n  const userState = {};\n\n  client.on(\"message\", async (message) => {\n    const chatId = message.from;\n    const text = message.body ? message.body.trim() : \"\";\n\n    // ===== Batalkan flow =====\n    if (text.toLowerCase() === \"batal\" && userState[chatId]) {\n      delete userState[chatId];\n      return message.reply(\"‚ùå Proses confess dibatalkan.\");\n    }\n\n    // ===== Mulai flow =====\n    if (text.toLowerCase() === \".confess\") {\n      userState[chatId] = { step: 1 };\n      return message.reply(\n        \"Silakan tulis *Nomor tujuan* (contoh: +628123456789) atau ketik *Batal* untuk membatalkan:\"\n      );\n    }\n\n    if (userState[chatId]) {\n      const state = userState[chatId];\n\n      // Step 1: nomor tujuan\n      if (state.step === 1) {\n        const nomor = text.replace(/\\D/g, \"\");\n        if (!nomor || nomor.length < 9)\n          return message.reply(\"Nomor tidak valid üòî. Contoh: +628123456789\");\n\n        state.nomor = nomor;\n        state.step = 2;\n        return message.reply(\n          \"Sekarang tulis pesan yang ingin dikirim atau ketik *Batal* untuk membatalkan:\"\n        );\n      }\n\n      // Step 2: pesan\n      if (state.step === 2) {\n        const pesan = text;\n        if (!pesan) return message.reply(\"Pesan tidak boleh kosong üòî\");\n\n        try {\n          const pesanAnonim = `${pesan}\\n\\n> Pesan ini dikirim secara anonim`;\n          await client.sendMessage(`${state.nomor}@c.us`, pesanAnonim);\n          message.reply(\"‚úÖ Pesan berhasil dikirim secara anonim!\");\n        } catch (err) {\n          console.error(\"Gagal kirim pesan:\", err);\n          message.reply(\"‚ö†Ô∏è Gagal mengirim pesan. Periksa nomor tujuan.\");\n        }\n\n        delete userState[chatId]; // selesai\n      }\n    }\n  });\n};\n","size_bytes":1771},"index.js":{"content":"require('dotenv').config();\nconst { Client, LocalAuth, MessageMedia } = require('whatsapp-web.js');\nconst qrcode = require('qrcode-terminal');\nconst fs = require('fs');\nconst path = require('path');\n\nconst client = new Client({\n    authStrategy: new LocalAuth()\n});\n\nlet botStartTime = null; // simpan waktu bot aktif\n\n// ===== QR CODE =====\nclient.on('qr', qr => {\n    qrcode.generate(qr, { small: true });\n    console.log('QR Code ter-generate, scan dengan WhatsApp!');\n});\n\nclient.on('ready', () => {\n    botStartTime = new Date();\n    console.log('Bot sudah siap dan online');\n});\n\n// ===== IMPORT MODULES =====\nconst confessModule = require('./confess');\nconfessModule(client); // initialize module confess\n\n// ===== MESSAGE HANDLER =====\nclient.on('message', async message => {\n    const text = message.body ? message.body.trim() : '';\n    const fromGroup = message.from.includes('@g.us');\n    const chat = await message.getChat();\n\n    console.log('Pesan masuk:', text);\n\n    // ===== AUTO REPLY =====\n    if(text.toLowerCase() === '.hai') message.reply('Halo! Aku bot, kamu Bisa ubah fotomu jadi stiker dan bantu kirim pesan confess ke Siapapun!');\n    if(text.toLowerCase() === '.ping') {\n        if(botStartTime) {\n            const uptime = Math.floor((new Date() - botStartTime) / 1000);\n            const hours = Math.floor(uptime / 3600);\n            const minutes = Math.floor((uptime % 3600) / 60);\n            const seconds = uptime % 60;\n            message.reply(`Bot aktif sejak: ${botStartTime.toLocaleString()}\\nUptime: ${hours}h ${minutes}m ${seconds}s`);\n        } else {\n            message.reply('Bot baru mulai, status uptime belum tersedia');\n        }\n    }\n\n   // ===== STICKER =====\nif(text.toLowerCase() === '.sticker') {\n    if(message.hasMedia || message.hasQuotedMsg) {\n        let mediaMessage = message;\n        if(message.hasQuotedMsg) mediaMessage = await message.getQuotedMessage();\n        try {\n            await message.reply('Prosess...');\n            const media = await mediaMessage.downloadMedia();\n            if(media) {\n                const extension = media.mimetype.split('/')[1];\n                const mediaPath = path.join(__dirname, 'media', `foto_${Date.now()}.${extension}`);\n                fs.writeFileSync(mediaPath, media.data, 'base64');\n                await client.sendMessage(message.from, media, { sendMediaAsSticker: true });\n            }\n        } catch(err) {\n            console.error('Gagal bikin sticker:', err);\n            message.reply('Gagal bikin sticker');\n        }\n    } else {\n        message.reply('Harap kirim foto terlebih dahulu atau reply ke media untuk membuat sticker.');\n    }\n}\n    // ===== MENU COMMAND =====\n\n  if(text.toLowerCase() === '.menu') {\n    const menuText = `*ü§ñ BOT MENU*\n\n‚ï≠‚îÄ‚ùè *üìå UMUM*\n‚îÇ ‚Ä¢ .hai : Sapaan bot\n‚îÇ ‚Ä¢ .ping : Cek uptime bot\n‚îÇ ‚Ä¢ .sticker : Ubah gambar/video jadi stiker\n‚îÇ ‚Ä¢ .confess : Kirim pesan confess ke target\n‚ï∞‚îÄ‚ùè\n\n‚ï≠‚îÄ‚ùè *üë• GRUP (Admin Only)*\n‚îÇ ‚Ä¢ .h <pesan> : Mention semua anggota\n‚îÇ ‚Ä¢ .close : Tutup grup\n‚îÇ ‚Ä¢ .open : Buka grup\n‚ï∞‚îÄ‚ùè\n\n> Made with ‚ù§Ô∏è - By Vei\n`;\n    message.reply(menuText);\n}\n\n    // ===== ADMIN COMMANDS =====\n    if(fromGroup) {\n        const sender = await message.getContact();\n        const isAdmin = chat.participants\n            .filter(p => p.isAdmin)\n            .some(p => p.id._serialized === sender.id._serialized);\n\n        if(text.toLowerCase().startsWith('.h ') && isAdmin) {\n            try {\n                const mentions = [];\n                for (let participant of chat.participants) {\n                    if(participant.id._serialized !== client.info.wid._serialized) {\n                        mentions.push(await client.getContactById(participant.id._serialized));\n                    }\n                }\n                const msgText = text.slice(3).trim() || 'Mention all';\n                if(mentions.length > 0) await chat.sendMessage(msgText, { mentions });\n            } catch(err) { console.error('Gagal mention all:', err); }\n        }\n\n        if(text.toLowerCase() === '.close' && isAdmin) {\n            await chat.setMessagesAdminsOnly(true);\n            await chat.sendMessage('Grup tutup wok');\n        }\n        if(text.toLowerCase() === '.open' && isAdmin) {\n            await chat.setMessagesAdminsOnly(false);\n            await chat.sendMessage('GEELOK Grup dibuka!');\n        }\n    }\n});\n\n// ===== INITIALIZE BOT =====\nclient.initialize();\n","size_bytes":4479}},"version":1}